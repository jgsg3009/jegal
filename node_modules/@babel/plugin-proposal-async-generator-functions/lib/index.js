"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

<<<<<<< HEAD
var _helperPluginUtils = require("@babel/helper-plugin-utils");

var _helperRemapAsyncToGenerator = _interopRequireDefault(require("@babel/helper-remap-async-to-generator"));

var _pluginSyntaxAsyncGenerators = _interopRequireDefault(require("@babel/plugin-syntax-async-generators"));

var _core = require("@babel/core");
=======
function _helperPluginUtils() {
  const data = require("@babel/helper-plugin-utils");

  _helperPluginUtils = function _helperPluginUtils() {
    return data;
  };

  return data;
}

function _helperRemapAsyncToGenerator() {
  const data = _interopRequireDefault(require("@babel/helper-remap-async-to-generator"));

  _helperRemapAsyncToGenerator = function _helperRemapAsyncToGenerator() {
    return data;
  };

  return data;
}

function _pluginSyntaxAsyncGenerators() {
  const data = _interopRequireDefault(require("@babel/plugin-syntax-async-generators"));

  _pluginSyntaxAsyncGenerators = function _pluginSyntaxAsyncGenerators() {
    return data;
  };

  return data;
}

function _core() {
  const data = require("@babel/core");

  _core = function _core() {
    return data;
  };

  return data;
}
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361

var _forAwait = _interopRequireDefault(require("./for-await"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

<<<<<<< HEAD
var _default = (0, _helperPluginUtils.declare)(api => {
=======
var _default = (0, _helperPluginUtils().declare)(api => {
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361
  api.assertVersion(7);
  const yieldStarVisitor = {
    Function(path) {
      path.skip();
    },

    YieldExpression({
      node
    }, state) {
      if (!node.delegate) return;
      const callee = state.addHelper("asyncGeneratorDelegate");
<<<<<<< HEAD
      node.argument = _core.types.callExpression(callee, [_core.types.callExpression(state.addHelper("asyncIterator"), [node.argument]), state.addHelper("awaitAsyncGenerator")]);
=======
      node.argument = _core().types.callExpression(callee, [_core().types.callExpression(state.addHelper("asyncIterator"), [node.argument]), state.addHelper("awaitAsyncGenerator")]);
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361
    }

  };
  const forAwaitVisitor = {
    Function(path) {
      path.skip();
    },

    ForOfStatement(path, {
      file
    }) {
<<<<<<< HEAD
      const {
        node
      } = path;
=======
      const node = path.node;
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361
      if (!node.await) return;
      const build = (0, _forAwait.default)(path, {
        getAsyncIterator: file.addHelper("asyncIterator")
      });
<<<<<<< HEAD
      const {
        declar,
        loop
      } = build;
=======
      const declar = build.declar,
            loop = build.loop;
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361
      const block = loop.body;
      path.ensureBlock();

      if (declar) {
        block.body.push(declar);
      }

      block.body = block.body.concat(node.body.body);

<<<<<<< HEAD
      _core.types.inherits(loop, node);

      _core.types.inherits(loop.body, node.body);
=======
      _core().types.inherits(loop, node);

      _core().types.inherits(loop.body, node.body);
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361

      if (build.replaceParent) {
        path.parentPath.replaceWithMultiple(build.node);
      } else {
        path.replaceWithMultiple(build.node);
      }
    }

  };
  const visitor = {
    Function(path, state) {
      if (!path.node.async) return;
      path.traverse(forAwaitVisitor, state);
      if (!path.node.generator) return;
      path.traverse(yieldStarVisitor, state);
<<<<<<< HEAD
      (0, _helperRemapAsyncToGenerator.default)(path, {
=======
      (0, _helperRemapAsyncToGenerator().default)(path, {
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361
        wrapAsync: state.addHelper("wrapAsyncGenerator"),
        wrapAwait: state.addHelper("awaitAsyncGenerator")
      });
    }

  };
  return {
<<<<<<< HEAD
    name: "proposal-async-generator-functions",
    inherits: _pluginSyntaxAsyncGenerators.default,
=======
    inherits: _pluginSyntaxAsyncGenerators().default,
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361
    visitor: {
      Program(path, state) {
        path.traverse(visitor, state);
      }

    }
  };
});

exports.default = _default;