var TYPE = require('../../tokenizer').TYPE;
<<<<<<< HEAD

var IDENT = TYPE.Ident;
var FULLSTOP = 0x002E; // U+002E FULL STOP (.)
=======
var IDENTIFIER = TYPE.Identifier;
var FULLSTOP = TYPE.FullStop;
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361

// '.' ident
module.exports = {
    name: 'ClassSelector',
    structure: {
        name: String
    },
    parse: function() {
<<<<<<< HEAD
        if (!this.scanner.isDelim(FULLSTOP)) {
            this.error('Full stop is expected');
        }

        this.scanner.next();
=======
        this.scanner.eat(FULLSTOP);
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361

        return {
            type: 'ClassSelector',
            loc: this.getLocation(this.scanner.tokenStart - 1, this.scanner.tokenEnd),
<<<<<<< HEAD
            name: this.consume(IDENT)
        };
    },
    generate: function(node) {
        this.chunk('.');
        this.chunk(node.name);
=======
            name: this.scanner.consume(IDENTIFIER)
        };
    },
    generate: function(processChunk, node) {
        processChunk('.');
        processChunk(node.name);
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361
    }
};
