<<<<<<< HEAD
var { isNodeChildrenList } = require('./utils');

function isSafeOperator(node) {
    return node.type === 'Operator' && node.value !== '+' && node.value !== '-';
}

=======
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361
module.exports = function cleanWhitespace(node, item, list) {
    // remove when first or last item in sequence
    if (item.next === null || item.prev === null) {
        list.remove(item);
        return;
    }

<<<<<<< HEAD
    // white space in stylesheet or block children
    if (isNodeChildrenList(this.stylesheet, list) ||
        isNodeChildrenList(this.block, list)) {
        list.remove(item);
        return;
    }

    if (item.next.data.type === 'WhiteSpace') {
=======
    // remove when previous node is whitespace
    if (item.prev.data.type === 'WhiteSpace') {
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361
        list.remove(item);
        return;
    }

<<<<<<< HEAD
    if (isSafeOperator(item.prev.data) || isSafeOperator(item.next.data)) {
=======
    if ((this.stylesheet !== null && this.stylesheet.children === list) ||
        (this.block !== null && this.block.children === list)) {
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361
        list.remove(item);
        return;
    }
};
