var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
<<<<<<< HEAD
	g = g || new Function("return this")();
=======
	g = g || Function("return this")() || (1, eval)("this");
>>>>>>> 99ef3b4711c8dcd2f717e43dd012712d1f333361
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;
